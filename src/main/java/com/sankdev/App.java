package com.sankdev;

// import java content classes generated by binding compiler
import com.sankdev.edbind.*;

import jakarta.xml.bind.*;

import java.io.FileInputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;

public class App 
{
    public static void main( String[] args ) {
        try {
            // create a JAXBContext capable of handling classes generated into
            // the com.sankdev.edbind package
            JAXBContext jaxbContext = JAXBContext.newInstance( "com.sankdev.edbind" );

            // create an Unmarshaller
            Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();

            // unmarshal a po instance document into a tree of Java content
            // objects composed of classes from the primer.po package.
            JAXBElement packetEPDJAXBElement =
                    (JAXBElement<PacketEPD>)unmarshaller.unmarshal(
                            App.class.getResourceAsStream( "/xml-files/B150S53M.xml" ) );
            PacketEPD packetEPD = (PacketEPD)packetEPDJAXBElement.getValue();

            // get List of all EDs
            List<ED> eds = packetEPD.getED101OrED103OrED104();

            // get the desired ED
            for (ED tempEd : eds) {
                //System.out.println(tempEd.getEDNo());
                if (tempEd.getEDNo().equals(BigInteger.valueOf(1344))) {
                    System.out.println("===> Found the ED");
                }
            }

            // change the billto address
         //   USAddress address = po.getBillTo();
         //   address.setName( "Gary Cole" );
         //   address.setStreet( "242 Sovetskaya str" );
         //   address.setCity( "Orenburg" );
         //   address.setState( "ORB" );
         //   address.setZip( new BigDecimal( "11111" ) );

            // create a Marshaller and marshal to a file
         //   Marshaller marshaller = jaxbContext.createMarshaller();
         //   marshaller.setProperty( Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE );
         //   marshaller.marshal( poe, System.out );

        } catch( JAXBException je ) {
            je.printStackTrace();
        }
    }
}
